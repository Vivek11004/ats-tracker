{"version":3,"sources":["app.js"],"names":["document","addEventListener","API_BASE_URL","resumeData","uploadBtn","getElementById","pasteBtn","resumeFile","resumeText","jobDescription","loader","parsedOutput","analysisOutput","tabButtons","querySelectorAll","tabContents","forEach","button","btn","classList","remove","add","content","dataset","tab","handleParseFile","handleParseText","files","length","alert","formData","FormData","append","parseAndAnalyze","value","trim","url","setLoading","innerHTML","fetch","method","body","parseRes","ok","Error","text","json","displayParsedData","jd","payload","resume_data","job_description","Promise","all","headers","JSON","stringify","scoreRes","matchRes","scoreData","matchData","displayAnalysis","console","error","message","data","html","name","email","phone","skills","map","s","join","score","feedback","f","similarity_score","matched_keywords","missing_keywords","isLoading","style","display"],"mappings":"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","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const API_BASE_URL = 'http://127.0.0.1:8000';\r\n\r\n    // State\r\n    let resumeData = null;\r\n\r\n    // DOM Elements\r\n    const uploadBtn = document.getElementById('uploadBtn');\r\n    const pasteBtn = document.getElementById('pasteBtn');\r\n    const resumeFile = document.getElementById('resumeFile');\r\n    const resumeText = document.getElementById('resumeText');\r\n    const jobDescription = document.getElementById('jobDescription');\r\n    const loader = document.getElementById('loader');\r\n    const parsedOutput = document.getElementById('parsedOutput');\r\n    const analysisOutput = document.getElementById('analysisOutput');\r\n\r\n    // Tab handling\r\n    const tabButtons = document.querySelectorAll('.tab-btn');\r\n    const tabContents = document.querySelectorAll('.tab-content');\r\n    tabButtons.forEach(button => {\r\n        button.addEventListener('click', () => {\r\n            tabButtons.forEach(btn => btn.classList.remove('active'));\r\n            button.classList.add('active');\r\n            tabContents.forEach(content => content.classList.remove('active'));\r\n            document.getElementById(button.dataset.tab).classList.add('active');\r\n        });\r\n    });\r\n\r\n    // Event Listeners\r\n    uploadBtn.addEventListener('click', handleParseFile);\r\n    pasteBtn.addEventListener('click', handleParseText);\r\n\r\n    async function handleParseFile() {\r\n        if (!resumeFile.files.length) {\r\n            alert('Please select a file first.');\r\n            return;\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('file', resumeFile.files[0]);\r\n        await parseAndAnalyze(formData, `${API_BASE_URL}/parse/file`);\r\n    }\r\n\r\n    async function handleParseText() {\r\n        if (!resumeText.value.trim()) {\r\n            alert('Please paste some text first.');\r\n            return;\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('text', resumeText.value);\r\n        await parseAndAnalyze(formData, `${API_BASE_URL}/parse/text`);\r\n    }\r\n\r\n    async function parseAndAnalyze(formData, url) {\r\n        setLoading(true);\r\n        parsedOutput.innerHTML = '';\r\n        analysisOutput.innerHTML = '';\r\n        resumeData = null;\r\n\r\n        try {\r\n            // 1. Parse the resume\r\n            const parseRes = await fetch(url, { method: 'POST', body: formData });\r\n            if (!parseRes.ok) throw new Error(`Parsing failed: ${await parseRes.text()}`);\r\n            resumeData = await parseRes.json();\r\n            displayParsedData(resumeData);\r\n\r\n            // 2. Score and Match\r\n            const jd = jobDescription.value.trim();\r\n            const payload = { resume_data: resumeData, job_description: jd || \"\" };\r\n\r\n            const [scoreRes, matchRes] = await Promise.all([\r\n                fetch(`${API_BASE_URL}/score`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) }),\r\n                fetch(`${API_BASE_URL}/match`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) })\r\n            ]);\r\n\r\n            const scoreData = await scoreRes.json();\r\n            const matchData = await matchRes.json();\r\n            displayAnalysis(scoreData, matchData);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n            parsedOutput.innerHTML = `<p style=\"color: red;\">Error: ${error.message}</p>`;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    function displayParsedData(data) {\r\n        let html = `<h3>${data.name}</h3>`;\r\n        html += `<p><strong>Email:</strong> ${data.email}</p>`;\r\n        html += `<p><strong>Phone:</strong> ${data.phone}</p>`;\r\n        html += `<h4>Skills</h4><ul>${data.skills.map(s => `<li>${s}</li>`).join('')}</ul>`;\r\n        parsedOutput.innerHTML = html;\r\n    }\r\n\r\n    function displayAnalysis(scoreData, matchData) {\r\n        let html = `<h3>ATS Score: ${scoreData.score}/100</h3>`;\r\n        html += `<ul>${scoreData.feedback.map(f => `<li>${f}</li>`).join('')}</ul>`;\r\n        \r\n        html += `<hr><h3>Job Match Analysis</h3>`;\r\n        html += `<p><strong>Semantic Similarity:</strong> ${matchData.similarity_score}%</p>`;\r\n        html += `<h4>Matched Keywords:</h4><p>${matchData.matched_keywords.join(', ') || 'None'}</p>`;\r\n        html += `<h4>Missing Keywords:</h4><p>${matchData.missing_keywords.join(', ') || 'None'}</p>`;\r\n\r\n        analysisOutput.innerHTML = html;\r\n    }\r\n\r\n    function setLoading(isLoading) {\r\n        loader.style.display = isLoading ? 'block' : 'none';\r\n    }\r\n});"],"file":"app.dev.js"}